*[File]: java.io.File
*[StubPrintStream]: nbmtools.StubPrintStream
*[Command]: nbmtools.Command
*[Internalize]: nbmtools.Internalize

# Test: Happy path

## Setup

Let fromURL = resource "zip1.zip".
Let toFile = a temporary file.

Let ins = a stub of `java.io.InputStream`.
Let out = `new StubPrintStream()`.
Let err = `new StubPrintStream()`.
Let command = `new Internalize()`.

## Verify

Assert `command.run(ins, out, err, fromURL.toString(), toFile.path)` is
`Command.EXIT_SUCCESS`.

Assert `toFile.length()` is not 0L.

# Test: Too few arguments

## Setup

Let args = any of `[] as String[]` or `["file"] as String[]`.

Let ins = a stub of `java.io.InputStream`.
Let out = `new StubPrintStream()`.
Let err = `new StubPrintStream()`.

Let command = `new Internalize()`.

## Verify

Assert `command.run(ins, out, err, args)` is `Command.EXIT_FAILURE`.

Assert `err.toString()` is [Output 1].

### Output 1

```
too few arguments
```

# Test: Invalid source

## Setup

Let ins = a stub of `java.io.InputStream`.
Let out = `new StubPrintStream()`.
Let err = `new StubPrintStream()`.
Let command = `new Internalize()`.

## Verify

Assert `command.run(ins, out, err, "", "")` throws an instance of
 `java.io.IOException`.

# Test: Valid URL source, invalid destination

## Setup

Let fromURL = resource "zip1.zip".

Let ins = a stub of `java.io.InputStream`.
Let out = `new StubPrintStream()`.
Let err = `new StubPrintStream()`.
Let command = `new Internalize()`.

## Verify

Assert `command.run(ins, out, err, fromURL.toString(), "")` throws an instance
of `java.io.IOException`.
